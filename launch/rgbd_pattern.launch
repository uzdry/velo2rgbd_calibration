<launch>

  <arg name="stdout" default="screen" />

  <!-- Full PointCloud2 -->
  <node pkg="nodelet" type="nodelet" name="fullpoints_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="fullpoints_xyzrgb"
        args="load depth_image_proc/point_cloud_xyzrgb fullpoints_manager" respawn="true">
    <remap from="rgb/image_rect_color"        to="camera/color/image_raw" />
    <remap from="rgb/camera_info"             to="camera/color/camera_info" />
    <remap from="depth_registered/image_rect" to="camera/aligned_depth_to_color/image_raw" />
    <remap from="depth_registered/points"     to="full_points2" />
  </node>

  <!-- Edge detection -->
  <node name="edge_detection" pkg="opencv_apps" type="edge_detection" output="$(arg stdout)" >
    <remap from="image" to="camera/color/image_raw" />
    <param name="use_camera_info" value="false" />
    <param name="debug_view" value="false" />
    <param name="edge_type" value="0" />
    <param name="canny_threshold1" value="100" />
    <param name="canny_threshold2" value="200" />
    <param name="apertureSize" value="3" />
    <param name="apply_blur_pre" value="true" />
    <param name="postBlurSize" value="13" />
    <param name="postBlurSigma" value="3.2" />
    <param name="apply_blur_post" value="false" />
    <param name="L2gradient" value="false" />
  </node>

  <!-- Masked depth - only edges -->
  <node name="v2c_disp_masker" pkg="velo2rgbd_calibration" type="v2c_disp_masker" output="$(arg stdout)" >
    <remap from="~image" to="camera/aligned_depth_to_color/image_raw" />
    <remap from="~mask" to="edge_detection/image" />
    <remap from="~output" to="/camera/aligned_depth_to_color/edges_image_raw" />
    <param name="edges_threshold" value="32" />
  </node>

  <!-- Masked PointCloud2 -->
  <node pkg="nodelet" type="nodelet" name="maskedpoints_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="masekdpoints_xyzrgb"
        args="load depth_image_proc/point_cloud_xyzrgb maskedpoints_manager" respawn="true">
    <remap from="rgb/image_rect_color"        to="camera/color/image_raw" />
    <remap from="rgb/camera_info"             to="camera/color/camera_info" />
    <remap from="depth_registered/image_rect" to="/camera/aligned_depth_to_color/edges_image_raw" />
    <remap from="depth_registered/points"     to="masked_points2" />
  </node>


  <!-- PCL generic nodelet manager -->
  <node pkg="nodelet" type="nodelet" name="stereo_pcl_manager" args="manager" output="$(arg stdout)"/>

  <!-- Masked cloud pass through -->
  <node pkg="nodelet" type="nodelet" name="edges_pass_through_z" args="load pcl/PassThrough stereo_pcl_manager" output="$(arg stdout)">
    <remap from="~input" to="masked_points2" />
    <remap from="~output" to="masked_z_filtered_points2" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: 0.5
      filter_limit_max: 4
      filter_limit_negative: False
      max_queue_size: 1
      keep_organized: False
    </rosparam>
  </node>

  <!-- Full cloud pass through -->
  <node pkg="nodelet" type="nodelet" name="full_pass_through_z" args="load pcl/PassThrough stereo_pcl_manager" output="$(arg stdout)">
    <remap from="~input" to="full_points2" />
    <remap from="~output" to="full_z_filtered_points2" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: 0.5
      filter_limit_max: 4
      filter_limit_negative: False
      max_queue_size: 1
      keep_organized: False
    </rosparam>
  </node>

  <!-- Plane finding on the masked cloud -->
  <node pkg="velo2rgbd_calibration" type="v2c_plane_segmentation" name="planar_segmentation" output="$(arg stdout)" required="true">
    <remap from="~input"   to="full_z_filtered_points2" />
    <rosparam>
      segmentation_type: 1
      axis: [0.0, 1.0, 0.0]
      threshold: 0.08
      eps_angle: 0.6
    </rosparam>
  </node>

  <!-- Extract plane cloud -->
  <node pkg="nodelet" type="nodelet" name="extract_plane_indices" args="load pcl/ExtractIndices stereo_pcl_manager" output="screen">
    <remap from="~input"   to="full_z_filtered_points2" />
    <remap from="~indices" to="/planar_segmentation/inliers" />
    <rosparam>
      negative: false
    </rosparam>
  </node>

  <!-- Our node -->
  <node pkg="velo2rgbd_calibration" type="rgbd_pattern" name="rgbd_pattern" output="screen">
    <remap from="~cloud2" to="masked_z_filtered_points2"/>
    <remap from="~cam_plane_coeffs" to="/planar_segmentation/model"/>
    <param name="~min_plane_normal_z" value="0.8"/>
    <param name="~line_threshold" value="0.1"/>
    <param name="~plane_distance_inliers" value="0.1"/>
    <param name="~min_distance_between_borders_x" value="0.7"/>
    <param name="~min_distance_between_borders_y" value="1.0"/>
    <param name="~min_line_inliers" value="900"/>
  </node>

  <!-- Extract circles cloud -->
  <node pkg="nodelet" type="nodelet" name="extract_circle_indices" args="load pcl/ExtractIndices stereo_pcl_manager" output="screen">
    <remap from="~input"   to="velo2rgbd_calibration/z_filtered_cloud" />-
    <remap from="~indices" to="velo2rgbd_calibration/inliers" />
    <rosparam>
      negative: false
    </rosparam>
  </node>

  <node pkg="tf2_ros" type="static_transform_publisher" name="depth2camera_tf" args="0 0 0 0 0 0 rgbd camera_link" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="depth2optical_tf" args="0 0 0 -1.57079632679 0 -1.57079632679 rgbd camera_color_optical_frame" />
</launch>
